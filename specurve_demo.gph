StataFileTM:00001:01000:LiveGPH:                       :
00008:00008:
*! classname: twowaygraph_g
*! family: twoway
*! command: tw (rbar ub99 lb99 rank if 0==0, fcolor(gs12) fintensity(inten50) lcolor(gs12) lwidth(none)) (rbar ub95 lb95 rank if 0==0, fcolor(gs6) fintensity(inten40) lcolor(gs6) lwidth(none)) (scatter beta rank if pval<0.01, mcolor(blue) msymbol(o) msize(small)) (scatter beta rank if 0.01<=pval & pval<0.05, mcolor(blue) msymbol(oh) msize(small)) (scatter beta rank if 0.05<=pval & pval<0.1, mcolor(blue) msymbol(+) msize(small)) (scatter beta rank if pval>=0.1, mcolor(red) msymbol(o) msize(small)) (scatter lhs_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter focal_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter rhs_excl_focal_encoded rank, msize(vsmall) msymbol(o)) (scatter fe_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter secluster_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter cond_encoded rank if 0==0, msize(vsmall) msymbol(o)) , legend(rows(3) rowgap(1) colfirst order(3 "Point estimate ({it:p}<0.01)" 4 "Point estimate ({it:p}<0.05)" 5 "Point estimate ({it:p}<0.1)" 6 "Point estimate ({it:p}{&ge}0.1)" 1 "99% CI" 2 "95% CI") region(lcolor(white)) pos(12) ring(1) size(vsmall) symysize(vsmall) symxsize(vsmall)) xtitle("") ytitle("") yline(0, lstyle(yxline)) yscale() xscale() xlab(minmax, noticks labsize(small)) ylab(-.0031962203735911(.0118154146508555).0440654382298311, angle(0) nogrid labsize(small) format(%9.3fc)) ylab(0 "0", add custom angle(0) nogrid notick labsize(small) labcolor(cranberry)) ylab(-.0049966645108643 "{bf:Dependent variable}" -.0067971086481375 "{bf:Focal variable}" -.0085975527854107 "{bf:Control variables}" -.0112982189913205 "{bf:Fixed effects}" -.0184999955404133 "{bf:Standard error clustering}" -.0221008838149597 "{bf:Condition}", add custom angle(0) nogrid notick labsize(tiny)) ylab(-.0058968865795009 "ln(Wage/GNP deflator)" -.0076973307167741 "Tenure" -.0094977748540473 "Baseline" -.0103979969226839 "Baseline and Union" -.0121984410599571 "None" -.0130986631285937 "Race" -.0139988851972303 "Individual" -.0148991072658669 "Industry" -.0157993293345035 "Occupation" -.0166995514031401 "Industry and Occupation" -.0175997734717767 "Race-Occupation" -.0194002176090499 "None" -.0203004396776865 "By Industry" -.0212006617463231 "By Occupation" -.0230011058835963 "Central City Area only" -.0239013279522329 "Married only", add custom angle(0) nogrid notick labsize(tiny)) graphregion(fcolor(white) lcolor(white)) plotregion(fcolor(white) lcolor(white)) scale(1) xsize(6) ysize(8) saving(specurve_demo)
*! command_date: 10 Dec 2024
*! command_time: 08:40:20
*! datafile: 
*! datafile_date: 
*! scheme: stcolor
*! naturallywhite: 1
*! xsize: 6
*! ysize: 8
*! end
<BeginItem> serset K82e702b8 
<BeginSerset>
<BeginSeries>
.name = `"ub99"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min =  .0142650686711583
.max =  .0428838967647455
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"lb99"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min =  -.0020146789085055
.max =  .0216039650437248
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"rank"'
.label = `""'
.format = `"%9.0g"'
.type.set numeric
.min =  1
.max =  84
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"ub95"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min =  .0132416857548731
.max =  .0380789123715145
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"lb95"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min =  .0013791806410657
.max =  .0227593590438829
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"lhs_encoded"'
.label = `""'
.format = `"%23.0g"'
.type.set numeric
.min =  -.0058968868106604
.max =  -.0058968868106604
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
.lab_offset = (.)
.vlabs.Declare __D_1 = `"ln(Wage/GNP deflator)"'
.vlabs.Declare __D_2 = `"Tenure"'
.vlabs.Declare __D_3 = `"Baseline"'
.vlabs.Declare __D_4 = `"Baseline and Union"'
.vlabs.Declare __D_5 = `"None"'
.vlabs.Declare __D_6 = `"Race"'
.vlabs.Declare __D_7 = `"Individual"'
.vlabs.Declare __D_8 = `"Industry"'
.vlabs.Declare __D_9 = `"Occupation"'
.vlabs.Declare __D_10 = `"Industry and Occupation"'
.vlabs.Declare __D_11 = `"Race-Occupation"'
.vlabs.Declare __D_12 = `"None"'
.vlabs.Declare __D_13 = `"By Industry"'
.vlabs.Declare __D_14 = `"By Occupation"'
.vlabs.Declare __D_15 = `"Central City Area only"'
.vlabs.Declare __D_16 = `"Married only"'
<EndSeries>
<BeginSeries>
.name = `"focal_encoded"'
.label = `""'
.format = `"%23.0g"'
.type.set numeric
.min =  -.0076973307877779
.max =  -.0076973307877779
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
.lab_offset = (.)
.vlabs.Declare __D_1 = `"ln(Wage/GNP deflator)"'
.vlabs.Declare __D_2 = `"Tenure"'
.vlabs.Declare __D_3 = `"Baseline"'
.vlabs.Declare __D_4 = `"Baseline and Union"'
.vlabs.Declare __D_5 = `"None"'
.vlabs.Declare __D_6 = `"Race"'
.vlabs.Declare __D_7 = `"Individual"'
.vlabs.Declare __D_8 = `"Industry"'
.vlabs.Declare __D_9 = `"Occupation"'
.vlabs.Declare __D_10 = `"Industry and Occupation"'
.vlabs.Declare __D_11 = `"Race-Occupation"'
.vlabs.Declare __D_12 = `"None"'
.vlabs.Declare __D_13 = `"By Industry"'
.vlabs.Declare __D_14 = `"By Occupation"'
.vlabs.Declare __D_15 = `"Central City Area only"'
.vlabs.Declare __D_16 = `"Married only"'
<EndSeries>
<BeginSeries>
.name = `"rhs_excl_focal_encoded"'
.label = `""'
.format = `"%23.0g"'
.type.set numeric
.min =  -.0103979967534542
.max =  -.0094977747648954
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
.lab_offset = (.)
.vlabs.Declare __D_1 = `"ln(Wage/GNP deflator)"'
.vlabs.Declare __D_2 = `"Tenure"'
.vlabs.Declare __D_3 = `"Baseline"'
.vlabs.Declare __D_4 = `"Baseline and Union"'
.vlabs.Declare __D_5 = `"None"'
.vlabs.Declare __D_6 = `"Race"'
.vlabs.Declare __D_7 = `"Individual"'
.vlabs.Declare __D_8 = `"Industry"'
.vlabs.Declare __D_9 = `"Occupation"'
.vlabs.Declare __D_10 = `"Industry and Occupation"'
.vlabs.Declare __D_11 = `"Race-Occupation"'
.vlabs.Declare __D_12 = `"None"'
.vlabs.Declare __D_13 = `"By Industry"'
.vlabs.Declare __D_14 = `"By Occupation"'
.vlabs.Declare __D_15 = `"Central City Area only"'
.vlabs.Declare __D_16 = `"Married only"'
<EndSeries>
<BeginSeries>
.name = `"fe_encoded"'
.label = `""'
.format = `"%23.0g"'
.type.set numeric
.min =  -.0175997726619244
.max =  -.0121984407305717
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
.lab_offset = (.)
.vlabs.Declare __D_1 = `"ln(Wage/GNP deflator)"'
.vlabs.Declare __D_2 = `"Tenure"'
.vlabs.Declare __D_3 = `"Baseline"'
.vlabs.Declare __D_4 = `"Baseline and Union"'
.vlabs.Declare __D_5 = `"None"'
.vlabs.Declare __D_6 = `"Race"'
.vlabs.Declare __D_7 = `"Individual"'
.vlabs.Declare __D_8 = `"Industry"'
.vlabs.Declare __D_9 = `"Occupation"'
.vlabs.Declare __D_10 = `"Industry and Occupation"'
.vlabs.Declare __D_11 = `"Race-Occupation"'
.vlabs.Declare __D_12 = `"None"'
.vlabs.Declare __D_13 = `"By Industry"'
.vlabs.Declare __D_14 = `"By Occupation"'
.vlabs.Declare __D_15 = `"Central City Area only"'
.vlabs.Declare __D_16 = `"Married only"'
<EndSeries>
<BeginSeries>
.name = `"secluster_encoded"'
.label = `""'
.format = `"%23.0g"'
.type.set numeric
.min =  -.0212006624788046
.max =  -.019400218501687
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
.lab_offset = (.)
.vlabs.Declare __D_1 = `"ln(Wage/GNP deflator)"'
.vlabs.Declare __D_2 = `"Tenure"'
.vlabs.Declare __D_3 = `"Baseline"'
.vlabs.Declare __D_4 = `"Baseline and Union"'
.vlabs.Declare __D_5 = `"None"'
.vlabs.Declare __D_6 = `"Race"'
.vlabs.Declare __D_7 = `"Individual"'
.vlabs.Declare __D_8 = `"Industry"'
.vlabs.Declare __D_9 = `"Occupation"'
.vlabs.Declare __D_10 = `"Industry and Occupation"'
.vlabs.Declare __D_11 = `"Race-Occupation"'
.vlabs.Declare __D_12 = `"None"'
.vlabs.Declare __D_13 = `"By Industry"'
.vlabs.Declare __D_14 = `"By Occupation"'
.vlabs.Declare __D_15 = `"Central City Area only"'
.vlabs.Declare __D_16 = `"Married only"'
<EndSeries>
<BeginSeries>
.name = `"cond_encoded"'
.label = `""'
.format = `"%23.0g"'
.type.set numeric
.min =  -.0239013284444809
.max =  -.0230011064559221
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
.lab_offset = (.)
.vlabs.Declare __D_1 = `"ln(Wage/GNP deflator)"'
.vlabs.Declare __D_2 = `"Tenure"'
.vlabs.Declare __D_3 = `"Baseline"'
.vlabs.Declare __D_4 = `"Baseline and Union"'
.vlabs.Declare __D_5 = `"None"'
.vlabs.Declare __D_6 = `"Race"'
.vlabs.Declare __D_7 = `"Individual"'
.vlabs.Declare __D_8 = `"Industry"'
.vlabs.Declare __D_9 = `"Occupation"'
.vlabs.Declare __D_10 = `"Industry and Occupation"'
.vlabs.Declare __D_11 = `"Race-Occupation"'
.vlabs.Declare __D_12 = `"None"'
.vlabs.Declare __D_13 = `"By Industry"'
.vlabs.Declare __D_14 = `"By Occupation"'
.vlabs.Declare __D_15 = `"Central City Area only"'
.vlabs.Declare __D_16 = `"Married only"'
<EndSeries>
.weight_id = (.)
<BeginSersetData>
sersetreadwrite    T   ÿÿþÿÿþþþþþþub99                                                                                                                                                  lb99                                                                                                                                                  rank                                                                                                                                                  ub95                                                                                                                                                  lb95                                                                                                                                                  lhs_encoded                                                                                                                                           focal_encoded                                                                                                                                         rhs_excl_focal_encoded                                                                                                                                fe_encoded                                                                                                                                            secluster_encoded                                                                                                                                     cond_encoded                                                                                                                                          %10.0g                                                   %10.0g                                                   %9.0g                                                    %10.0g                                                   %10.0g                                                   %23.0g                                                   %23.0g                                                   %23.0g                                                   %23.0g                                                   %23.0g                                                   %23.0g                                                   ±W7?#aÄ`¿      ð?Ùµút?Zðéï³V?   U'x¿   <¿   K¿   À¬¿   ` µ¿    y¿Õ]BÌàô¥?NY?      U@OF£?é»:N?   U'x¿   <¿   Às¿    û¿    ¦Ý¿    ¿Á?jÓG.?#aÄ`¿  ?SÄ´?Zðéï³V?¬:Á»ä9ü»\\*¼[e¼­­¼¸ÌÃ¼åbÊÖ^Q? ¯éF_¿   @îªñ<È?çZhLY?¬:Á»ä9ü»\\*¼[e¼M¦¼¸ÌÃ¼±W7?]¿Jaw?  @@Ùµút?TA`b{?¬:Á»ä9ü»\\*¼[e¼5í¼¸ÌÃ¼1Hò?)Ûß45j?  @Z} È\?òç¨côv?¬:Á»ä9ü»\\*¼[e¼­­¼Ñl¼¼oËÛí?HYö@¶@g?   @ketM?´Ä´¼$ v?¬:Á»ä9ü»\\*¼[e¼M¦¼Ñl¼¼ít©B,¦?å­¢kz?  À@
õHQ?¢ä/§üf?¬:Á»ä9ü»\\*¼[e¼5í¼Ñl¼¼pglQÑA?Pâ (za?  à@ôéÒÝnÎ?gvâÎv?¬:Á»ä9ü»¼[e¼­­¼¸ÌÃ¼O:§L0k?úºÉìÔK¿   A([uV?u\vÚl?¬:Á»ä9ü»¼[e¼M¦¼¸ÌÃ¼+LyÝ?+Ò¹È?  Ag÷m~?ôbß×{?¬:Á»ä9ü»¼[e¼5í¼¸ÌÃ¼eÑdì'?Éª},ó?   AÊDhl7D?ÄÃ½º?¬:Á»ä9ü»\\*¼ct¼­­¼¸ÌÃ¼·]ÙÖ?ê±SáÐy?  0A7«,§ñ(?ö={UiC?¬:Á»ä9ü»\\*¼ct¼M¦¼¸ÌÃ¼(û|xj?Ú[À?  @A}P5¦?jó·9 ?¬:Á»ä9ü»\\*¼ct¼5í¼¸ÌÃ¼ÚLú?ípxTÈwz?  PA¬ëM?Dº+bA?¬:Á»ä9ü»¼[e¼­­¼Ñl¼¼²î9m?üZÕS3?  `AýÐÊÃ!? ßó@Ê?¬:Á»ä9ü»¼[e¼5í¼Ñl¼¼`)©¶?0¤Ùäqu?  pAeéiP?,·bñ?¬:Á»ä9ü»¼[e¼M¦¼Ñl¼¼í@wâ²?Àû?  Ak¼WøpÍ?PÉÉ×2Ä?¬:Á»ä9ü»\\*¼f-¼­­¼¸ÌÃ¼AðWå?üù	É?  AZÙáã§ÿ?Ê~z|?¬:Á»ä9ü»\\*¼f-¼5í¼¸ÌÃ¼ã}{?JÖ¼%¬{?  A¨ #¶È?.0Øú_?¬:Á»ä9ü»\\*¼f-¼M¦¼¸ÌÃ¼jâÐYÂr?Ôd,?  A:¬nb?oÑWH±?¬:Á»ä9ü»\\*¼Í¼M¦¼¸ÌÃ¼&ã¯?¤Ýn'S7?   AUC Ö¼?9£4)ý?¬:Á»ä9ü»\\*¼Í¼­­¼¸ÌÃ¼Ýü?¡n%&~?  ¨A<
:?iÁ³9?¬:Á»ä9ü»\\*¼Í¼5í¼¸ÌÃ¼v¡`Ä×?µtk<?  °Ak¨5×ÍG?¯°K~ô[?¬:Á»ä9ü»\\*¼ct¼­­¼Ñl¼¼zÉH"Ñ?)ìH±?z?  ¸Ai}8¥Û?8ò:¬åí?¬:Á»ä9ü»\\*¼ct¼M¦¼Ñl¼¼4Õ÷%½Ò?¢^FÑµÿ?  ÀAhÐ¾%£?:h¸Ñéw?¬:Á»ä9ü»\\*¼ct¼5í¼Ñl¼¼ÑÒÐ?+2:f?  ÈAâéö=?`6µÙ?¬:Á»ä9ü»\\*¼øÛG¼­­¼¸ÌÃ¼þÍ@¾?¤ºt¨Ã?  ÐA@îÎ\3Ñ? zXtÜ?¬:Á»ä9ü»\\*¼øÛG¼5í¼¸ÌÃ¼ºûv?mm mWt?  ØAS{/}?½7?¬:Á»ä9ü»\\*¼øÛG¼M¦¼¸ÌÃ¼/î4V6?ð_zF÷?  àAu}{\?dAy	Òª?¬:Á»ä9ü»\\*¼Í¼­­¼Ñl¼¼I¿½Õ4a?»½8U¡?  èAYr$-?WkÔØ	?¬:Á»ä9ü»\\*¼Í¼5í¼Ñl¼¼)e¯Fß?üqU×e¥?  ðAcù(ÿ®?IbÇ?¬:Á»ä9ü»\\*¼Í¼M¦¼Ñl¼¼e«)]5?£U;?  øAÉÏ½u¿¯?wC/¼OF?¬:Á»ä9ü»\\*¼ÆV¼­­¼¸ÌÃ¼x¬ÌJ?xüÐï1?   Be­Ñ@_?é:Á	?¬:Á»ä9ü»\\*¼ÆV¼5í¼¸ÌÃ¼uíh0?}÷º~?  BËA;?Ï3ði?¬:Á»ä9ü»\\*¼m¼­­¼¸ÌÃ¼ÎL¬ù&?a¾pÚª?  BÚ^nE?¼£­8ÀT?¬:Á»ä9ü»\\*¼m¼5í¼¸ÌÃ¼	Ø¸Y?@Ã1Ä~?  B{P©Ø¡|?~ÀáF?¬:Á»ä9ü»\\*¼m¼M¦¼¸ÌÃ¼b³vÀ´?­)£WYv?  BzÁì¿ò-?lxå¬Ì?¬:Á»ä9ü»\\*¼ÆV¼M¦¼¸ÌÃ¼nÑÜ÷ç?y¬Ý?  B,xS=`m?	,¿Ïw?¬:Á»ä9ü»\\*¼f-¼­­¼Ñl¼¼ÖµØhº?A¿uÞ4?  BS"Þ?FE,ì?¬:Á»ä9ü»\\*¼f-¼M¦¼Ñl¼¼²ÿe:?ÃqË9?  BÁk·CyÓ?jª¼?¬:Á»ä9ü»\\*¼f-¼5í¼Ñl¼¼orev ?w»
ø¢ú?   Bl r¡~?DÝL>?¬:Á»ä9ü»\\*¼øÛG¼­­¼Ñl¼¼ºãÖòò?%ßáè?  $BRç{iO?»-Tm(È?¬:Á»ä9ü»¼ct¼­­¼¸ÌÃ¼Hv1?¢çüòbw?  (BØ¡_ñ?%¨Ã9¼?¬:Á»ä9ü»\\*¼øÛG¼M¦¼Ñl¼¼¨Õðt?vh´µ¡]z?  ,BóáÑ³¨ú?§ÀáT"?¬:Á»ä9ü»¼ct¼M¦¼¸ÌÃ¼K/X¹s?¼%ÕIó?  0B·­¥49?}+q¥?¬:Á»ä9ü»¼ct¼5í¼¸ÌÃ¼N¸u³î?HVRÚ?  4B2$yÊ§?­?¬:Á»ä9ü»\\*¼øÛG¼5í¼Ñl¼¼æìÉMm?úÇ=?  8BuäêW?&«	?¬:Á»ä9ü»¼f-¼­­¼¸ÌÃ¼_fêOn?nî?  <BÃ¬BÑÃ?fea?¬:Á»ä9ü»¼f-¼5í¼¸ÌÃ¼K¼þ?z§öè|?  @B¢I?èÀMpR??¬:Á»ä9ü»¼f-¼M¦¼¸ÌÃ¼9Rø:?ûkþ R?  DBÆf¢jN?ª°,ßc+?¬:Á»ä9ü»¼Í¼M¦¼¸ÌÃ¼`zq?e±¿­?  HBumC²ãÌ?ÂQõ§d?¬:Á»ä9ü»¼Í¼5í¼¸ÌÃ¼­Î%"@?á9jLH?  LB4¦ÂnÁ?2ìÖÁ?¬:Á»ä9ü»¼Í¼­­¼¸ÌÃ¼Gþ1Ð?`ký¿k?  PB|!øÿ¯?àcXpö¬?¬:Á»ä9ü»\\*¼ÆV¼­­¼Ñl¼¼Úq
®º?ÔBñ?  TBù{C¸N?ÚbÈB?¬:Á»ä9ü»\\*¼m¼M¦¼Ñl¼¼ ]Õ?~Ý­0,¯?  XBSø®q?²=é·Û?¬:Á»ä9ü»\\*¼m¼­­¼Ñl¼¼;xI!×?ôF©Æ?  \B$öo?Ëÿö?¬:Á»ä9ü»\\*¼m¼5í¼Ñl¼¼@,¸?ûã~?  `BÖ^-xN9?(´[o?¬:Á»ä9ü»\\*¼ÆV¼M¦¼Ñl¼¼ÄPrjÞ?õæ³ù?  dBAnÏ?´H¬?¬:Á»ä9ü»\\*¼ÆV¼5í¼Ñl¼¼xásÿ¾¢?®·³I~w?  hB6<étq ?jOõ?¬:Á»ä9ü»¼m¼M¦¼¸ÌÃ¼¯0U?Õì.ºX{?  lBH® øöá?¡ùéÊa?¬:Á»ä9ü»¼m¼­­¼¸ÌÃ¼6 sC?ãîüù>O?  pBÏtë½n?J	$?¬:Á»ä9ü»¼m¼5í¼¸ÌÃ¼Ìî3?rqmM?  tBGÅG?>RrW?¬:Á»ä9ü»¼ct¼­­¼Ñl¼¼Çb<	5ï ?÷Q&Ii?  xBKØÄØ|?EÎgäS?¬:Á»ä9ü»¼øÛG¼­­¼¸ÌÃ¼ücMH½?ó~#®´o?  |Bi¨°n¾Ý?:ÀÃ>O?¬:Á»ä9ü»¼øÛG¼5í¼¸ÌÃ¼#;Ä%`¤?»b!(®k?  BXë2Ø¨¡?e»³¿È?¬:Á»ä9ü»¼øÛG¼M¦¼¸ÌÃ¼±¿éÝ?.¾þý?Z?  BBPiaº?a;Ç}x}?¬:Á»ä9ü»¼ct¼5í¼Ñl¼¼«Ð§ñ¡?î.í'?  Bh|¢?ìÒ6¿*?¬:Á»ä9ü»¼ct¼M¦¼Ñl¼¼¾üô0 ?½M!«Òì?  BbSûvz?óEº?¬:Á»ä9ü»¼Í¼M¦¼Ñl¼¼ÕÕÍ±	?[ËðoñÍ?  BpëY	ï?Î´l.è?¬:Á»ä9ü»¼Í¼5í¼Ñl¼¼ó4%X?Kkµ´}?  BÅ³ûøè?µÚBªî?¬:Á»ä9ü»¼Í¼­­¼Ñl¼¼;ðê©¤?-tÙ:o?  B+U+Nöð¡?L=s­É?¬:Á»ä9ü»¼ÆV¼M¦¼¸ÌÃ¼X-µ\"¡?¯úÏ?  B{{¶[ï?Ft3J®?¬:Á»ä9ü»¼ÆV¼­­¼¸ÌÃ¼¾5ÛH?ågEÿ?  BRµi?0s·Þ?¬:Á»ä9ü»¼ÆV¼5í¼¸ÌÃ¼}\?ÞT_K®Å?  Bì²B¥!?¬®&?¬:Á»ä9ü»¼f-¼­­¼Ñl¼¼ «VÛá?îäÅe^?  Büt=z¾?¢¡?¬:Á»ä9ü»¼f-¼5í¼Ñl¼¼}&)If;¡?`Vïé?  B^®J()?ß37£1.?¬:Á»ä9ü»¼f-¼M¦¼Ñl¼¼¡?lws æ?  Bá2¦0@¶?¡NäxA?¬:Á»ä9ü»¼øÛG¼­­¼Ñl¼¼¬ÙI¤?ÿwþ?  Br)]îg+¢?M#<w?¬:Á»ä9ü»¼m¼M¦¼Ñl¼¼ã£w¡¨È¥?Ùºh$_?  B¼W°ô;£?rßêè.R?¬:Á»ä9ü»¼øÛG¼M¦¼Ñl¼¼ºI²y×?ÌL 9Ìc?  BäÔc'!¶?ö1æÃ$?¬:Á»ä9ü»¼m¼5í¼Ñl¼¼¸J¥£×e ?jqÿ£o?   BKmJ~Ù?«ÿÌÇa?¬:Á»ä9ü»¼m¼­­¼Ñl¼¼´Ðåd?cO¹kñ-?  ¢B·Zéñå?}Dç]?¬:Á»ä9ü»¼øÛG¼5í¼Ñl¼¼åÆq¡?Íl²!ù?  ¤BÑ|I ?«õvÁ¢J?¬:Á»ä9ü»¼ÆV¼­­¼Ñl¼¼Õ]BÌàô¥?Hæh±1E?  ¦BOF£?Èc?¬:Á»ä9ü»¼ÆV¼M¦¼Ñl¼¼ßÇ ?NY?  ¨Be8aTÕ?é»:N?¬:Á»ä9ü»¼ÆV¼5í¼Ñl¼¼
<EndSersetData>
<EndSerset>
<EndItem>
<BeginItem> serset K82e71b18 
<BeginSerset>
<BeginSeries>
.name = `"beta"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min =  .0099865427796075
.max =  .0264350109589838
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"rank"'
.label = `""'
.format = `"%9.0g"'
.type.set numeric
.min =  3
.max =  84
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
.weight_id = (.)
<BeginSersetData>
sersetreadwrite    Q   ÿþbeta                                                                                                                                                  rank                                                                                                                                                  %10.0g                                                   %9.0g                                                    í¯Ós?      @''Ç?      U@í¯Ós?  @@yC:²uC?  @µ¼£Õ?   @2îT++?  À@ºp"q?  à@©]jÎ?  A¬&3K!?   AJêQ¦J?  0AJêQ¦J?  @AÎö¬>?  PAUà¾ìq?  `A¶¿¯×	?  pAP2Å?  AQvó$?  AQvó$?  AyJMT¬]?  AyJMT¬]?   AyJMT¬]?  ¨AaÀ-äz?  °A4ML©?  ¸A4ML©?  ÀAj	I0Õ?  ÈA¨½®¶ß?  ÐAm;?  ØA"-ÀüX?  àA"-ÀüX?  èA"-ÀüX?  ðA´¸ê©si?  øA-{78âq?   BñUr=çw?  BñUr=çw?  B]´¤b?  Bæ¾/¬?  B'sÔ?  B{ Ü¥kê?  B{ Ü¥kê?  BhðãN?   B&ÿÐ±s?  $Bõº ç?  (Ba!/û?  ,Ba!/û?  0BGÕO?  4BuS¹?  8Bc?  <Bc?  @B_-$2?  DB_-$2?  HB_-$2?  LB5×&=?  PBó_z}Y?  TB>yöºµ¯?  XB>yöºµ¯?  \B¹¸?  `B®­2bSÈ?  dB|ØãÃÈ®?  hB¿Î6nÉ?  lB¿Î6nÉ?  pBÑSõO
?  tB6÷[O?  xBxq8~?  |B[Ú?  Bþ¾óì?  Bþ¾óì?  BPãÑk?  BPãÑk?  BPãÑk?  B~$¹=£?  B5O8[@£?  BRA=6Ï£?  Bïh÷)$?  Bü$  ?  Bü$  ?  BÁ@ÅÔ¥û?  BÐD÷6	?  BÒj?  B{¥õ¢?  B{¥õ¢?   BOh!?  ¢BgLÁÜVî?  ¤Bu8-?  ¦B''Ç?  ¨B
<EndSersetData>
<EndSerset>
<EndItem>
<BeginItem> serset K82e71078 
<BeginSerset>
<BeginSeries>
.name = `"beta"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min =  .0098231212270664
.max =  .013951731067314
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"rank"'
.label = `""'
.format = `"%9.0g"'
.type.set numeric
.min =  1
.max =  8
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
.weight_id = (.)
<BeginSersetData>
sersetreadwrite       ÿþbeta                                                                                                                                                  rank                                                                                                                                                  %10.0g                                                   %9.0g                                                    ¹³Q%?      ð?Zì@¥¹?       @¹³Q%?  ?Ø0þ\?   @Zì@¥¹?   A
<EndSersetData>
<EndSerset>
<EndItem>
<BeginItem> serset K82e718e8 
<BeginSerset>
<BeginSeries>
.name = `"beta"'
.label = `""'
.format = `"%10.0g"'
.type.set numeric
.min = (.)
.max = (.)
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
<BeginSeries>
.name = `"rank"'
.label = `""'
.format = `"%9.0g"'
.type.set numeric
.min = (.)
.max = (.)
.median = (.)
.pct25 = (.)
.pct75 = (.)
.categories = (.)
<EndSeries>
.weight_id = (.)
<BeginSersetData>
sersetreadwrite        ÿþbeta                                                                                                                                                  rank                                                                                                                                                  %10.0g                                                   %9.0g                                                          à      à      à      à
<EndSersetData>
<EndSerset>
<EndItem>
<BeginItem> scheme K832696c8 
.setscheme , scheme(stcolor) naturallywhite(1)
<EndItem>
<BeginItem> twowaygraph_g K82e6cde8 <UseScheme> K832696c8
.style.editstyle boxstyle( linestyle( color(white)) shadestyle( color(white))) editcopy
.sersets[1] = .__Map.K82e702b8.ref
.sersets[2] = .__Map.K82e71b18.ref
.sersets[3] = .__Map.K82e71078.ref
.sersets[4] = .__Map.K82e718e8.ref
.insert (plotregion1 = .plotregion.new , style(scheme twoway) graph(`.objkey')) at 1 1
.plotregion1.xaxis_dexes = `"1"'
.plotregion1.yaxis_dexes = `"1"'
.plotregion1.style.editstyle boxstyle( linestyle( color(white)) shadestyle( color(white))) editcopy
.plotregion1.Declare plot1 = .y2xview_g.new , type(rbar) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof ub99') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p1bar) ybvar(`.sersets[1].seriesof lb99')
.plotregion1.plot1.style.editstyle line(color(gs12)) area(linestyle(color(gs12))) line(width(none)) area(linestyle(width(none))) area(shadestyle(color(gs12))) area(shadestyle(intensity(inten50))) editcopy
.plotregion1.plot1.bar_drop_to.setstyle , style(x)
.plotregion1.plot1.register_with_scale
.plotregion1.Declare plot2 = .y2xview_g.new , type(rbar) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof ub95') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p2bar) ybvar(`.sersets[1].seriesof lb95')
.plotregion1.plot2.style.editstyle line(color(gs6)) area(linestyle(color(gs6))) line(width(none)) area(linestyle(width(none))) area(shadestyle(color(gs6))) area(shadestyle(intensity(inten40))) editcopy
.plotregion1.plot2.bar_drop_to.setstyle , style(x)
.plotregion1.plot2.register_with_scale
.plotregion1.Declare plot3 = .yxview.new , type(scatter) serset(`.sersets[2].objkey') yvariable(`.sersets[2].seriesof beta') xvariable(`.sersets[2].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p3) 
.plotregion1.plot3.style.editstyle marker(symbol(o)) marker(fillcolor(blue) linestyle(color(blue))) marker(size(small)) editcopy
.plotregion1.Declare plot4 = .yxview.new , type(scatter) serset(`.sersets[3].objkey') yvariable(`.sersets[3].seriesof beta') xvariable(`.sersets[3].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p4) 
.plotregion1.plot4.style.editstyle marker(symbol(oh)) marker(fillcolor(blue) linestyle(color(blue))) marker(size(small)) editcopy
.plotregion1.Declare plot5 = .yxview.new , type(scatter) serset(`.sersets[4].objkey') yvariable(`.sersets[4].seriesof beta') xvariable(`.sersets[4].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p5) 
.plotregion1.plot5.style.editstyle marker(symbol(+)) marker(fillcolor(blue) linestyle(color(blue))) marker(size(small)) editcopy
.plotregion1.Declare plot6 = .yxview.new , type(scatter) serset(`.sersets[4].objkey') yvariable(`.sersets[4].seriesof beta') xvariable(`.sersets[4].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p6) 
.plotregion1.plot6.style.editstyle marker(symbol(o)) marker(fillcolor(red) linestyle(color(red))) marker(size(small)) editcopy
.plotregion1.Declare plot7 = .yxview.new , type(scatter) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof lhs_encoded') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p7) 
.plotregion1.plot7.style.editstyle marker(symbol(o)) marker(size(vsmall)) editcopy
.plotregion1.Declare plot8 = .yxview.new , type(scatter) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof focal_encoded') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p8) 
.plotregion1.plot8.style.editstyle marker(symbol(o)) marker(size(vsmall)) editcopy
.plotregion1.Declare plot9 = .yxview.new , type(scatter) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof rhs_excl_focal_encoded') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p9) 
.plotregion1.plot9.style.editstyle marker(symbol(o)) marker(size(vsmall)) editcopy
.plotregion1.Declare plot10 = .yxview.new , type(scatter) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof fe_encoded') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p10) 
.plotregion1.plot10.style.editstyle marker(symbol(o)) marker(size(vsmall)) editcopy
.plotregion1.Declare plot11 = .yxview.new , type(scatter) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof secluster_encoded') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p11) 
.plotregion1.plot11.style.editstyle marker(symbol(o)) marker(size(vsmall)) editcopy
.plotregion1.Declare plot12 = .yxview.new , type(scatter) serset(`.sersets[1].objkey') yvariable(`.sersets[1].seriesof cond_encoded') xvariable(`.sersets[1].seriesof rank')     plotregion(`.plotregion1.objkey') style(scheme p12) 
.plotregion1.plot12.style.editstyle marker(symbol(o)) marker(size(vsmall)) editcopy
.plotregion1.clear_scales
.plotregion1.reset_scales , noclear
.n_views = 12
.n_plotregions = 1
.last_style = 12
.x_scales = `" "1""'
.y_scales = `" "1""'
.create_axes 1 1 "9" "" 9
.style.editstyle legend_ring(1) editcopy
.style.editstyle legend_position(12) editcopy
.insert (legend = .legend_g.new, graphs(`.objkey') style(scheme)) above plotregion1 , ring(1) 
.legend.style.editstyle box_alignment(N) editcopy
.legend.style.editstyle boxstyle( linestyle( color(white))) editcopy
.legend.style.editstyle labelstyle( size(vsmall)) editcopy
.legend.holes = ""
.legend.style.editstyle  rows(3) col_first(yes) row_gap(1) key_xsize(vsmall) key_ysize(vsmall) editcopy
.legend.insert (note = .sized_textbox.new, mtextq(`""') style(scheme leg_note) ) below plotregion1 , ring(3) 
.legend.note.style.editstyle box_alignment(SW) editcopy
.legend.note.style.editstyle horizontal(left) editcopy
.legend.insert (caption = .sized_textbox.new, mtextq(`""') style(scheme leg_caption) ) below plotregion1 , ring(5) 
.legend.caption.style.editstyle box_alignment(SW) editcopy
.legend.caption.style.editstyle horizontal(left) editcopy
.legend.insert (subtitle = .sized_textbox.new, mtextq(`""') style(scheme leg_subtitle) ) above plotregion1 , ring(6) 
.legend.subtitle.style.editstyle box_alignment(N) editcopy
.legend.subtitle.style.editstyle horizontal(center) editcopy
.legend.insert (title = .sized_textbox.new, mtextq(`""') style(scheme leg_title) ) above plotregion1 , ring(7) 
.legend.title.style.editstyle box_alignment(N) editcopy
.legend.title.style.editstyle horizontal(center) editcopy
.legend.rebuild
.legend.parse_order 3 "Point estimate ({it:p}<0.01)" 4 "Point estimate ({it:p}<0.05)" 5 "Point estimate ({it:p}<0.1)" 6 "Point estimate ({it:p}{&ge}0.1)" 1 "99% CI" 2 "95% CI"
.legend.repositionkeys
.xaxis1.major.clear
.xaxis1.style.editstyle majorstyle(numticks(1)) editcopy
.xaxis1.major.minmax_ticks
.xaxis1.reset_scale reinit
.xaxis1.style.editstyle majorstyle( tickstyle( show_ticks(no)  textstyle( size(small))) ) editcopy
.xaxis1.title.edit , mtextq(`""""')   replace
.yaxis1.major.clear
.yaxis1.major.range_ticks -.0031962203735911 .0440654382298311 .0118154146508555
.yaxis1.reset_scale reinit
.yaxis1.style.editstyle draw_major_grid(no) editcopy
.yaxis1.style.editstyle majorstyle( tickangle(0) tickstyle(  textstyle( size(small))) ) editcopy
.yaxis1.major.label_format = `"%9.3fc"'
.yaxis1.major.add_ticks  0 `"0"' ,  custom
.yaxis1.reset_scale reinit
.yaxis1.style.editstyle draw_major_grid(no) editcopy
.yaxis1.major.set_custom `.yaxis1.style.majorstyle.objkey'  tickangle(0) tickstyle( show_ticks(no)  textstyle( size(small) color(cranberry)))
.yaxis1.major.add_ticks  -.0049966645109 `"{bf:Dependent variable}"' -.0067971086481 `"{bf:Focal variable}"' -.0085975527854 `"{bf:Control variables}"' -.0112982189913 `"{bf:Fixed effects}"' -.0184999955404 `"{bf:Standard error clustering}"' -.022100883815 `"{bf:Condition}"' ,  custom
.yaxis1.reset_scale reinit
.yaxis1.style.editstyle draw_major_grid(no) editcopy
.yaxis1.major.set_custom `.yaxis1.style.majorstyle.objkey'  tickangle(0) tickstyle( show_ticks(no)  textstyle( size(tiny)))
.yaxis1.major.add_ticks  -.0058968865795 `"ln(Wage/GNP deflator)"' -.0076973307168 `"Tenure"' -.009497774854 `"Baseline"' -.0103979969227 `"Baseline and Union"' -.01219844106 `"None"' -.0130986631286 `"Race"' -.0139988851972 `"Individual"' -.0148991072659 `"Industry"' -.0157993293345 `"Occupation"' -.0166995514031 `"Industry and Occupation"' -.0175997734718 `"Race-Occupation"' -.019400217609 `"None"' -.0203004396777 `"By Industry"' -.0212006617463 `"By Occupation"' -.0230011058836 `"Central City Area only"' -.0239013279522 `"Married only"' ,  custom
.yaxis1.reset_scale reinit
.yaxis1.style.editstyle draw_major_grid(no) editcopy
.yaxis1.major.set_custom `.yaxis1.style.majorstyle.objkey'  tickangle(0) tickstyle( show_ticks(no)  textstyle( size(tiny)))
.yaxis1.title.edit , mtextq(`""""')   replace
tempname glsty
.`glsty' = .gridlinestyle.new, style(scheme)
.`glsty'.editstyle  linestyle(yxline) editcopy
.yaxis1.plotregion.declare_xyline .gridline_g.new 0 , ordinate(y) plotregion(`.yaxis1.plotregion.objkey') styleref(`glsty') 
.insert (r1title = .sized_textbox.new, mtextq(`""') style(scheme r1title) orientation(vertical)) rightof plotregion1 , ring(1) 
.insert (r2title = .sized_textbox.new, mtextq(`""') style(scheme r2title) orientation(vertical)) rightof plotregion1 , ring(2) 
.insert (l1title = .sized_textbox.new, mtextq(`""') style(scheme l1title) orientation(vertical)) leftof plotregion1 , ring(1) 
.insert (l2title = .sized_textbox.new, mtextq(`""') style(scheme l2title) orientation(vertical)) leftof plotregion1 , ring(2) 
.insert (t1title = .sized_textbox.new, mtextq(`""') style(scheme t1title) ) above plotregion1 , ring(1) 
.insert (t2title = .sized_textbox.new, mtextq(`""') style(scheme t2title) ) above plotregion1 , ring(2) 
.insert (b1title = .sized_textbox.new, mtextq(`""') style(scheme b1title) ) below plotregion1 , ring(1) 
.insert (b2title = .sized_textbox.new, mtextq(`""') style(scheme b1title) ) below plotregion1 , ring(2) 
.insert (note = .sized_textbox.new, mtextq(`""') style(scheme note) ) below plotregion1 , ring(4) 
.note.style.editstyle box_alignment(SW) editcopy
.note.style.editstyle horizontal(left) editcopy
.insert (caption = .sized_textbox.new, mtextq(`""') style(scheme caption) ) below plotregion1 , ring(5) 
.caption.style.editstyle box_alignment(SW) editcopy
.caption.style.editstyle horizontal(left) editcopy
.insert (subtitle = .sized_textbox.new, mtextq(`""') style(scheme subtitle) ) above plotregion1 , ring(6) 
.subtitle.style.editstyle box_alignment(N) editcopy
.subtitle.style.editstyle horizontal(center) editcopy
.insert (title = .sized_textbox.new, mtextq(`""') style(scheme title) ) above plotregion1 , ring(7) 
.title.style.editstyle box_alignment(N) editcopy
.title.style.editstyle horizontal(center) editcopy
.insert (spacert = .spacer.new) above plotregion1 , ring(11)
.insert (spacerb = .spacer.new) below plotregion1 , ring(11)
.insert (spacerl = .spacer.new) leftof plotregion1 , ring(11)
.insert (spacerr = .spacer.new) rightof plotregion1 , ring(11)
.set_scale 1
.style.editstyle declared_xsize(6) editcopy
.style.editstyle declared_ysize(8) editcopy
.command = `"tw (rbar ub99 lb99 rank if 0==0, fcolor(gs12) fintensity(inten50) lcolor(gs12) lwidth(none)) (rbar ub95 lb95 rank if 0==0, fcolor(gs6) fintensity(inten40) lcolor(gs6) lwidth(none)) (scatter beta rank if pval<0.01, mcolor(blue) msymbol(o) msize(small)) (scatter beta rank if 0.01<=pval & pval<0.05, mcolor(blue) msymbol(oh) msize(small)) (scatter beta rank if 0.05<=pval & pval<0.1, mcolor(blue) msymbol(+) msize(small)) (scatter beta rank if pval>=0.1, mcolor(red) msymbol(o) msize(small)) (scatter lhs_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter focal_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter rhs_excl_focal_encoded rank, msize(vsmall) msymbol(o)) (scatter fe_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter secluster_encoded rank if 0==0, msize(vsmall) msymbol(o)) (scatter cond_encoded rank if 0==0, msize(vsmall) msymbol(o)) , legend(rows(3) rowgap(1) colfirst order(3 "Point estimate ({it:p}<0.01)" 4 "Point estimate ({it:p}<0.05)" 5 "Point estimate ({it:p}<0.1)" 6 "Point estimate ({it:p}{&ge}0.1)" 1 "99% CI" 2 "95% CI") region(lcolor(white)) pos(12) ring(1) size(vsmall) symysize(vsmall) symxsize(vsmall)) xtitle("") ytitle("") yline(0, lstyle(yxline)) yscale() xscale() xlab(minmax, noticks labsize(small)) ylab(-.0031962203735911(.0118154146508555).0440654382298311, angle(0) nogrid labsize(small) format(%9.3fc)) ylab(0 "0", add custom angle(0) nogrid notick labsize(small) labcolor(cranberry)) ylab(-.0049966645108643 "{bf:Dependent variable}" -.0067971086481375 "{bf:Focal variable}" -.0085975527854107 "{bf:Control variables}" -.0112982189913205 "{bf:Fixed effects}" -.0184999955404133 "{bf:Standard error clustering}" -.0221008838149597 "{bf:Condition}", add custom angle(0) nogrid notick labsize(tiny)) ylab(-.0058968865795009 "ln(Wage/GNP deflator)" -.0076973307167741 "Tenure" -.0094977748540473 "Baseline" -.0103979969226839 "Baseline and Union" -.0121984410599571 "None" -.0130986631285937 "Race" -.0139988851972303 "Individual" -.0148991072658669 "Industry" -.0157993293345035 "Occupation" -.0166995514031401 "Industry and Occupation" -.0175997734717767 "Race-Occupation" -.0194002176090499 "None" -.0203004396776865 "By Industry" -.0212006617463231 "By Occupation" -.0230011058835963 "Central City Area only" -.0239013279522329 "Married only", add custom angle(0) nogrid notick labsize(tiny)) graphregion(fcolor(white) lcolor(white)) plotregion(fcolor(white) lcolor(white)) scale(1) xsize(6) ysize(8) saving(specurve_demo)"'
.date = "10 Dec 2024"
.time = "08:40:20"
.dta_file = ""
.dta_date = ""
<EndItem>
